{"remainingRequest":"/Users/kations/Projekte/CMS/contist-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/kations/Projekte/CMS/contist-ui/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/kations/Projekte/CMS/contist-ui/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/kations/Projekte/CMS/contist-ui/node_modules/react-hot-loader/babel.js\"],\"cacheDirectory\":true,\"babelrc\":false}!/Users/kations/Projekte/CMS/contist-ui/src/lib/components/FormState.js","dependencies":[{"path":"/Users/kations/Projekte/CMS/contist-ui/src/lib/components/FormState.js","mtime":1538120350197},{"path":"/Users/kations/Projekte/CMS/contist-ui/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/kations/Projekte/CMS/contist-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport { propsToStyle, styleProps } from '../utils'; //\n// const Form = styled.form`\n//   width: 85%;\n//   max-width: ${props => props.theme.globals.wrapperWidth || '1000px'};\n//   margin: 0 auto;\n//   ${props => propsToStyle(props)};\n// `;\n//\n// class AutoForm extends React.Component {\n//   constructor(props) {\n//     super(props);\n//\n//     const { initialState } = this.props;\n//\n//     this.state = {\n//       formState: initialState || {},\n//     };\n//   }\n//\n//   componentWillReceiveProps(nextProps) {\n//     if (nextProps.initialState === this.props.initialState) {\n//       return;\n//     }\n//\n//     this.setState({\n//       formState: nextProps.initialState,\n//     });\n//   }\n//\n//   setSubmitting = bool => {\n//     this.setState({ submit: bool });\n//   };\n//\n//   handleChange = event => {\n//     const target = event.target;\n//     const value = target.type === 'checkbox' ? target.checked : target.value;\n//     const name = target.name;\n//\n//     this.setState({\n//       [name]: value,\n//     });\n//   };\n//\n//   render() {\n//     const {\n//       initialState,\n//       schema,\n//       validate,\n//       onSubmit,\n//       onChange,\n//       disabled,\n//       children,\n//     } = this.props;\n//\n//     var schema = {\n//       key: {\n//         type: 'text',\n//         label: 'Label',\n//         placeholder: 'text',\n//         component: 'MultiSelect',\n//         required: false,\n//         disabled: false,\n//       },\n//     };\n//\n//     return (\n//       <Form>\n//         {schema &&\n//           schema.map(input => {\n//             return <div />;\n//           })}\n//         {children}\n//         <button type=\"submit\" disabled={disabled}>\n//           Submit\n//         </button>\n//       </Form>\n//     );\n//   }\n// }\n//\n// const flip = () => ({\n//   flipResults: Math.random(),\n// });\n\nvar FormState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FormState, _React$Component);\n\n  function FormState(props) {\n    var _this;\n\n    _classCallCheck(this, FormState);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FormState).call(this, props));\n    _this.state = {};\n\n    _this.onSubmit = function () {\n      _this.setState({\n        submitting: true\n      });\n\n      var errors = _this.props.validate(_this.state);\n\n      console.log('errors', errors);\n\n      if (Object.keys(errors).length === 0) {\n        _this.props.onSubmit(_this.state, _this.isSubmmitted, _this.resetForm);\n      }\n    };\n\n    _this.onChange = function (event) {\n      var target = event.target;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      var name = target.name;\n\n      _this.setState({\n        form: _objectSpread({}, _this.state.form, _defineProperty({}, name, value))\n      });\n    };\n\n    _this.onBlur = function (event) {\n      var target = event.target;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      var name = target.name;\n\n      _this.setState({\n        form: _objectSpread({}, _this.state.form, _defineProperty({}, name, value))\n      });\n    };\n\n    _this.isSubmmitted = function () {\n      _this.setState({\n        submitting: false\n      });\n    };\n\n    _this.resetForm = function () {\n      _this.setState({\n        form: _this.props.initialState\n      });\n    };\n\n    var initialState = _this.props.initialState;\n    _this.state = {\n      form: initialState || {},\n      submitting: false\n    };\n    return _this;\n  }\n\n  _createClass(FormState, [{\n    key: \"render\",\n    value: function render() {\n      return this.props.children({\n        onSubmit: this.onSubmit,\n        onChange: this.onChange,\n        onBlur: this.onBlur,\n        formState: this.state.form,\n        submitting: this.state.submitting\n      });\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return FormState;\n}(React.Component);\n\nvar _default = FormState;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(FormState, \"FormState\", \"/Users/kations/Projekte/CMS/contist-ui/src/lib/components/FormState.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/kations/Projekte/CMS/contist-ui/src/lib/components/FormState.js\");\n  leaveModule(module);\n})();\n\n;\nFormState.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"onSubmit\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"onChange\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"event\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"onBlur\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"event\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"isSubmmitted\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"resetForm\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }],\n  \"displayName\": \"FormState\"\n};",{"version":3,"sources":["/Users/kations/Projekte/CMS/contist-ui/src/lib/components/FormState.js"],"names":["React","Fragment","styled","propsToStyle","styleProps","FormState","props","state","onSubmit","setState","submitting","errors","validate","console","log","Object","keys","length","isSubmmitted","resetForm","onChange","event","target","value","type","checked","name","form","onBlur","initialState","children","formState","Component"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport styled from 'styled-components';\n\nimport { propsToStyle, styleProps } from '../utils';\n//\n// const Form = styled.form`\n//   width: 85%;\n//   max-width: ${props => props.theme.globals.wrapperWidth || '1000px'};\n//   margin: 0 auto;\n//   ${props => propsToStyle(props)};\n// `;\n//\n// class AutoForm extends React.Component {\n//   constructor(props) {\n//     super(props);\n//\n//     const { initialState } = this.props;\n//\n//     this.state = {\n//       formState: initialState || {},\n//     };\n//   }\n//\n//   componentWillReceiveProps(nextProps) {\n//     if (nextProps.initialState === this.props.initialState) {\n//       return;\n//     }\n//\n//     this.setState({\n//       formState: nextProps.initialState,\n//     });\n//   }\n//\n//   setSubmitting = bool => {\n//     this.setState({ submit: bool });\n//   };\n//\n//   handleChange = event => {\n//     const target = event.target;\n//     const value = target.type === 'checkbox' ? target.checked : target.value;\n//     const name = target.name;\n//\n//     this.setState({\n//       [name]: value,\n//     });\n//   };\n//\n//   render() {\n//     const {\n//       initialState,\n//       schema,\n//       validate,\n//       onSubmit,\n//       onChange,\n//       disabled,\n//       children,\n//     } = this.props;\n//\n//     var schema = {\n//       key: {\n//         type: 'text',\n//         label: 'Label',\n//         placeholder: 'text',\n//         component: 'MultiSelect',\n//         required: false,\n//         disabled: false,\n//       },\n//     };\n//\n//     return (\n//       <Form>\n//         {schema &&\n//           schema.map(input => {\n//             return <div />;\n//           })}\n//         {children}\n//         <button type=\"submit\" disabled={disabled}>\n//           Submit\n//         </button>\n//       </Form>\n//     );\n//   }\n// }\n//\n// const flip = () => ({\n//   flipResults: Math.random(),\n// });\n\nclass FormState extends React.Component {\n  state = {};\n  constructor(props) {\n    super(props);\n\n    const { initialState } = this.props;\n\n    this.state = { form: initialState || {}, submitting: false };\n  }\n\n  onSubmit = () => {\n    this.setState({ submitting: true });\n    const errors = this.props.validate(this.state);\n    console.log('errors', errors);\n    if (Object.keys(errors).length === 0) {\n      this.props.onSubmit(this.state, this.isSubmmitted, this.resetForm);\n    }\n  };\n\n  onChange = event => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({ form: { ...this.state.form, [name]: value } });\n  };\n\n  onBlur = event => {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({ form: { ...this.state.form, [name]: value } });\n  };\n\n  isSubmmitted = () => {\n    this.setState({ submitting: false });\n  };\n\n  resetForm = () => {\n    this.setState({ form: this.props.initialState });\n  };\n\n  render() {\n    return this.props.children({\n      onSubmit: this.onSubmit,\n      onChange: this.onChange,\n      onBlur: this.onBlur,\n      formState: this.state.form,\n      submitting: this.state.submitting,\n    });\n  }\n}\n\nexport default FormState;\n"]}]}