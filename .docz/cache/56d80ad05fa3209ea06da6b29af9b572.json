{"remainingRequest":"/Users/kations/Projekte/CMS/contist-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/kations/Projekte/CMS/contist-ui/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/kations/Projekte/CMS/contist-ui/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/kations/Projekte/CMS/contist-ui/node_modules/react-hot-loader/babel.js\"],\"cacheDirectory\":true,\"babelrc\":false}!/Users/kations/Projekte/CMS/contist-ui/src/lib/components/Headline.js","dependencies":[{"path":"/Users/kations/Projekte/CMS/contist-ui/src/lib/components/Headline.js","mtime":1538390124193},{"path":"/Users/kations/Projekte/CMS/contist-ui/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/kations/Projekte/CMS/contist-ui/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/kations/Projekte/CMS/contist-ui/src/lib/components/Headline.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  max-width: 100%;\\n  letter-spacing: 1px;\\n  word-spacing: 2px;\\n  \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\n// import styled from 'styled-components';\n//\n// import { propsToStyle, styleProps } from '../utils';\n//\n// const Headline = styled.h1`\n//   ${props => propsToStyle(props)};\n// `;\n//\n// Headline.propTypes = {\n//   ...styleProps,\n// };\n//\n//\n// Headline.defaultProps = {\n//   maxWidth: '1200px',\n// };\n//\n// export default Headline;\nimport React from 'react';\nimport styled from 'styled-components';\nimport { PoseGroup } from 'react-pose';\nimport SplitText from 'react-pose-text';\nimport { propsToStyle, styleProps } from '../utils';\nvar Headline = styled.h1(_templateObject(), function (props) {\n  return propsToStyle(props);\n});\nHeadline.propTypes = _objectSpread({}, styleProps);\n\nvar _default = function _default(props) {\n  return React.createElement(Headline, Object.assign({\n    as: props.as,\n    style: props.style,\n    className: props.className\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), props.charPoses ? React.createElement(PoseGroup, {\n    animateOnMount: true,\n    preEnterPose: \"exit\",\n    flipMove: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(SplitText, {\n    key: 'dsgdf',\n    charPoses: props.charPoses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, props.children)) : props.children);\n};\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Headline, \"Headline\", \"/Users/kations/Projekte/CMS/contist-ui/src/lib/components/Headline.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/kations/Projekte/CMS/contist-ui/src/lib/components/Headline.js\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/kations/Projekte/CMS/contist-ui/src/lib/components/Headline.js"],"names":["React","styled","PoseGroup","SplitText","propsToStyle","styleProps","Headline","h1","props","propTypes","as","style","className","charPoses","children"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,UAAzC;AAEA,IAAMC,QAAQ,GAAGL,MAAM,CAACM,EAAV,oBAIV,UAAAC,KAAK;AAAA,SAAIJ,YAAY,CAACI,KAAD,CAAhB;AAAA,CAJK,CAAd;AAOAF,QAAQ,CAACG,SAAT,qBACKJ,UADL;;eAIe,kBAAAG,KAAK;AAAA,SAClB,oBAAC,QAAD;AACE,IAAA,EAAE,EAAEA,KAAK,CAACE,EADZ;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACG,KAFf;AAGE,IAAA,SAAS,EAAEH,KAAK,CAACI;AAHnB,KAIMJ,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMGA,KAAK,CAACK,SAAN,GACC,oBAAC,SAAD;AAAW,IAAA,cAAc,MAAzB;AAA0B,IAAA,YAAY,EAAC,MAAvC;AAA8C,IAAA,QAAQ,EAAE,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAE,OAAhB;AAAyB,IAAA,SAAS,EAAEL,KAAK,CAACK,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACM,QADT,CADF,CADD,GAOCN,KAAK,CAACM,QAbV,CADkB;AAAA,C;;AAApB;;;;;;;;;;;;0BAXMR,Q","sourcesContent":["// import styled from 'styled-components';\n//\n// import { propsToStyle, styleProps } from '../utils';\n//\n// const Headline = styled.h1`\n//   ${props => propsToStyle(props)};\n// `;\n//\n// Headline.propTypes = {\n//   ...styleProps,\n// };\n//\n//\n// Headline.defaultProps = {\n//   maxWidth: '1200px',\n// };\n//\n// export default Headline;\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { PoseGroup } from 'react-pose';\nimport SplitText from 'react-pose-text';\n\nimport { propsToStyle, styleProps } from '../utils';\n\nconst Headline = styled.h1`\n  max-width: 100%;\n  letter-spacing: 1px;\n  word-spacing: 2px;\n  ${props => propsToStyle(props)};\n`;\n\nHeadline.propTypes = {\n  ...styleProps,\n};\n\nexport default props => (\n  <Headline\n    as={props.as}\n    style={props.style}\n    className={props.className}\n    {...props}\n  >\n    {props.charPoses ? (\n      <PoseGroup animateOnMount preEnterPose=\"exit\" flipMove={false}>\n        <SplitText key={'dsgdf'} charPoses={props.charPoses}>\n          {props.children}\n        </SplitText>\n      </PoseGroup>\n    ) : (\n      props.children\n    )}\n  </Headline>\n);\n"]}]}